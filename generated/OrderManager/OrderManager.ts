// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class CancelDecreasePosition extends ethereum.Event {
  get params(): CancelDecreasePosition__Params {
    return new CancelDecreasePosition__Params(this);
  }
}

export class CancelDecreasePosition__Params {
  _event: CancelDecreasePosition;

  constructor(event: CancelDecreasePosition) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get indexToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get isLong(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }

  get receiver(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get acceptablePrice(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get executionFee(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get blockGap(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get timeGap(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class CancelIncreasePosition extends ethereum.Event {
  get params(): CancelIncreasePosition__Params {
    return new CancelIncreasePosition__Params(this);
  }
}

export class CancelIncreasePosition__Params {
  _event: CancelIncreasePosition;

  constructor(event: CancelIncreasePosition) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get indexToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amountIn(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get isLong(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }

  get acceptablePrice(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get executionFee(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get blockGap(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get timeGap(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class CancelOrder extends ethereum.Event {
  get params(): CancelOrder__Params {
    return new CancelOrder__Params(this);
  }
}

export class CancelOrder__Params {
  _event: CancelOrder;

  constructor(event: CancelOrder) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get indexToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get orderIndex(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get collateralDelta(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get triggerPrice(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get executionFee(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get isLong(): boolean {
    return this._event.parameters[7].value.toBoolean();
  }

  get triggerAboveThreshold(): boolean {
    return this._event.parameters[8].value.toBoolean();
  }

  get isIncreaseOrder(): boolean {
    return this._event.parameters[9].value.toBoolean();
  }

  get isMaxOrder(): boolean {
    return this._event.parameters[10].value.toBoolean();
  }
}

export class CreateDecreasePosition extends ethereum.Event {
  get params(): CreateDecreasePosition__Params {
    return new CreateDecreasePosition__Params(this);
  }
}

export class CreateDecreasePosition__Params {
  _event: CreateDecreasePosition;

  constructor(event: CreateDecreasePosition) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get indexToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get isLong(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }

  get receiver(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get acceptablePrice(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get executionFee(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get index(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get queueIndex(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get blockNumber(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get blockTime(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }
}

export class CreateIncreasePosition extends ethereum.Event {
  get params(): CreateIncreasePosition__Params {
    return new CreateIncreasePosition__Params(this);
  }
}

export class CreateIncreasePosition__Params {
  _event: CreateIncreasePosition;

  constructor(event: CreateIncreasePosition) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get indexToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amountIn(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get isLong(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }

  get acceptablePrice(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get executionFee(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get index(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get queueIndex(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get blockNumber(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get blockTime(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }

  get gasPrice(): BigInt {
    return this._event.parameters[11].value.toBigInt();
  }
}

export class CreateOrder extends ethereum.Event {
  get params(): CreateOrder__Params {
    return new CreateOrder__Params(this);
  }
}

export class CreateOrder__Params {
  _event: CreateOrder;

  constructor(event: CreateOrder) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get indexToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get orderIndex(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get collateralDelta(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get triggerPrice(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get executionFee(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get isLong(): boolean {
    return this._event.parameters[7].value.toBoolean();
  }

  get triggerAboveThreshold(): boolean {
    return this._event.parameters[8].value.toBoolean();
  }

  get isIncreaseOrder(): boolean {
    return this._event.parameters[9].value.toBoolean();
  }

  get isMaxOrder(): boolean {
    return this._event.parameters[10].value.toBoolean();
  }
}

export class ExecuteDecreasePosition extends ethereum.Event {
  get params(): ExecuteDecreasePosition__Params {
    return new ExecuteDecreasePosition__Params(this);
  }
}

export class ExecuteDecreasePosition__Params {
  _event: ExecuteDecreasePosition;

  constructor(event: ExecuteDecreasePosition) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get indexToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get isLong(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }

  get receiver(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get acceptablePrice(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get executionFee(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get blockGap(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get timeGap(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class ExecuteIncreasePosition extends ethereum.Event {
  get params(): ExecuteIncreasePosition__Params {
    return new ExecuteIncreasePosition__Params(this);
  }
}

export class ExecuteIncreasePosition__Params {
  _event: ExecuteIncreasePosition;

  constructor(event: ExecuteIncreasePosition) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get indexToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amountIn(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get isLong(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }

  get acceptablePrice(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get executionFee(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get blockGap(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get timeGap(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class ExecuteOrder extends ethereum.Event {
  get params(): ExecuteOrder__Params {
    return new ExecuteOrder__Params(this);
  }
}

export class ExecuteOrder__Params {
  _event: ExecuteOrder;

  constructor(event: ExecuteOrder) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get indexToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get orderIndex(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get collateralDelta(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get triggerPrice(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get executionFee(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get executionPrice(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get isLong(): boolean {
    return this._event.parameters[8].value.toBoolean();
  }

  get triggerAboveThreshold(): boolean {
    return this._event.parameters[9].value.toBoolean();
  }

  get isIncreaseOrder(): boolean {
    return this._event.parameters[10].value.toBoolean();
  }
}

export class LeverageDecreased extends ethereum.Event {
  get params(): LeverageDecreased__Params {
    return new LeverageDecreased__Params(this);
  }
}

export class LeverageDecreased__Params {
  _event: LeverageDecreased;

  constructor(event: LeverageDecreased) {
    this._event = event;
  }

  get collateralDelta(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get prevLeverage(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get nextLeverage(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SetDelayValues extends ethereum.Event {
  get params(): SetDelayValues__Params {
    return new SetDelayValues__Params(this);
  }
}

export class SetDelayValues__Params {
  _event: SetDelayValues;

  constructor(event: SetDelayValues) {
    this._event = event;
  }

  get minBlockDelayKeeper(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get minTimeDelayPublic(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get maxTimeDelay(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SetLiquidator extends ethereum.Event {
  get params(): SetLiquidator__Params {
    return new SetLiquidator__Params(this);
  }
}

export class SetLiquidator__Params {
  _event: SetLiquidator;

  constructor(event: SetLiquidator) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isActive(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class SetOrderKeeper extends ethereum.Event {
  get params(): SetOrderKeeper__Params {
    return new SetOrderKeeper__Params(this);
  }
}

export class SetOrderKeeper__Params {
  _event: SetOrderKeeper;

  constructor(event: SetOrderKeeper) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isActive(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class SetPositionKeeper extends ethereum.Event {
  get params(): SetPositionKeeper__Params {
    return new SetPositionKeeper__Params(this);
  }
}

export class SetPositionKeeper__Params {
  _event: SetPositionKeeper;

  constructor(event: SetPositionKeeper) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isActive(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class UpdateOrder extends ethereum.Event {
  get params(): UpdateOrder__Params {
    return new UpdateOrder__Params(this);
  }
}

export class UpdateOrder__Params {
  _event: UpdateOrder;

  constructor(event: UpdateOrder) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get collateralToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get indexToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get orderIndex(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get collateralDelta(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get triggerPrice(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get isLong(): boolean {
    return this._event.parameters[7].value.toBoolean();
  }

  get triggerAboveThreshold(): boolean {
    return this._event.parameters[8].value.toBoolean();
  }

  get isIncreaseOrder(): boolean {
    return this._event.parameters[9].value.toBoolean();
  }

  get isMaxOrder(): boolean {
    return this._event.parameters[10].value.toBoolean();
  }
}

export class WithdrawFees extends ethereum.Event {
  get params(): WithdrawFees__Params {
    return new WithdrawFees__Params(this);
  }
}

export class WithdrawFees__Params {
  _event: WithdrawFees;

  constructor(event: WithdrawFees) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OrderManager__decreasePositionRequestsResult {
  value0: Address;
  value1: Address;
  value2: Address;
  value3: BigInt;
  value4: boolean;
  value5: Address;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;
  value9: BigInt;

  constructor(
    value0: Address,
    value1: Address,
    value2: Address,
    value3: BigInt,
    value4: boolean,
    value5: Address,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
    value9: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromAddress(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromUnsignedBigInt(this.value9));
    return map;
  }

  getAccount(): Address {
    return this.value0;
  }

  get_collateralToken(): Address {
    return this.value1;
  }

  getIndexToken(): Address {
    return this.value2;
  }

  getSizeDelta(): BigInt {
    return this.value3;
  }

  getIsLong(): boolean {
    return this.value4;
  }

  getReceiver(): Address {
    return this.value5;
  }

  getAcceptablePrice(): BigInt {
    return this.value6;
  }

  getExecutionFee(): BigInt {
    return this.value7;
  }

  getBlockNumber(): BigInt {
    return this.value8;
  }

  getBlockTime(): BigInt {
    return this.value9;
  }
}

export class OrderManager__getAllOrdersResultValue0Struct extends ethereum.Tuple {
  get account(): Address {
    return this[0].toAddress();
  }

  get collateralToken(): Address {
    return this[1].toAddress();
  }

  get indexToken(): Address {
    return this[2].toAddress();
  }

  get collateralDelta(): BigInt {
    return this[3].toBigInt();
  }

  get sizeDelta(): BigInt {
    return this[4].toBigInt();
  }

  get triggerPrice(): BigInt {
    return this[5].toBigInt();
  }

  get executionFee(): BigInt {
    return this[6].toBigInt();
  }

  get isLong(): boolean {
    return this[7].toBoolean();
  }

  get triggerAboveThreshold(): boolean {
    return this[8].toBoolean();
  }

  get isIncreaseOrder(): boolean {
    return this[9].toBoolean();
  }

  get isMaxOrder(): boolean {
    return this[10].toBoolean();
  }

  get orderIndex(): BigInt {
    return this[11].toBigInt();
  }
}

export class OrderManager__getOrderAtResultValue0Struct extends ethereum.Tuple {
  get account(): Address {
    return this[0].toAddress();
  }

  get collateralToken(): Address {
    return this[1].toAddress();
  }

  get indexToken(): Address {
    return this[2].toAddress();
  }

  get collateralDelta(): BigInt {
    return this[3].toBigInt();
  }

  get sizeDelta(): BigInt {
    return this[4].toBigInt();
  }

  get triggerPrice(): BigInt {
    return this[5].toBigInt();
  }

  get executionFee(): BigInt {
    return this[6].toBigInt();
  }

  get isLong(): boolean {
    return this[7].toBoolean();
  }

  get triggerAboveThreshold(): boolean {
    return this[8].toBoolean();
  }

  get isIncreaseOrder(): boolean {
    return this[9].toBoolean();
  }

  get isMaxOrder(): boolean {
    return this[10].toBoolean();
  }

  get orderIndex(): BigInt {
    return this[11].toBigInt();
  }
}

export class OrderManager__increasePositionRequestsResult {
  value0: Address;
  value1: Address;
  value2: Address;
  value3: BigInt;
  value4: BigInt;
  value5: boolean;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;
  value9: BigInt;

  constructor(
    value0: Address,
    value1: Address,
    value2: Address,
    value3: BigInt,
    value4: BigInt,
    value5: boolean,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
    value9: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromUnsignedBigInt(this.value9));
    return map;
  }

  getAccount(): Address {
    return this.value0;
  }

  get_collateralToken(): Address {
    return this.value1;
  }

  getIndexToken(): Address {
    return this.value2;
  }

  getAmountIn(): BigInt {
    return this.value3;
  }

  getSizeDelta(): BigInt {
    return this.value4;
  }

  getIsLong(): boolean {
    return this.value5;
  }

  getAcceptablePrice(): BigInt {
    return this.value6;
  }

  getExecutionFee(): BigInt {
    return this.value7;
  }

  getBlockNumber(): BigInt {
    return this.value8;
  }

  getBlockTime(): BigInt {
    return this.value9;
  }
}

export class OrderManager__ordersResult {
  value0: Address;
  value1: Address;
  value2: Address;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: boolean;
  value8: boolean;
  value9: boolean;
  value10: boolean;
  value11: BigInt;

  constructor(
    value0: Address,
    value1: Address,
    value2: Address,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: boolean,
    value8: boolean,
    value9: boolean,
    value10: boolean,
    value11: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromBoolean(this.value7));
    map.set("value8", ethereum.Value.fromBoolean(this.value8));
    map.set("value9", ethereum.Value.fromBoolean(this.value9));
    map.set("value10", ethereum.Value.fromBoolean(this.value10));
    map.set("value11", ethereum.Value.fromUnsignedBigInt(this.value11));
    return map;
  }

  getAccount(): Address {
    return this.value0;
  }

  getCollateralToken(): Address {
    return this.value1;
  }

  getIndexToken(): Address {
    return this.value2;
  }

  getCollateralDelta(): BigInt {
    return this.value3;
  }

  getSizeDelta(): BigInt {
    return this.value4;
  }

  getTriggerPrice(): BigInt {
    return this.value5;
  }

  getExecutionFee(): BigInt {
    return this.value6;
  }

  getIsLong(): boolean {
    return this.value7;
  }

  getTriggerAboveThreshold(): boolean {
    return this.value8;
  }

  getIsIncreaseOrder(): boolean {
    return this.value9;
  }

  getIsMaxOrder(): boolean {
    return this.value10;
  }

  getOrderIndex(): BigInt {
    return this.value11;
  }
}

export class OrderManager extends ethereum.SmartContract {
  static bind(address: Address): OrderManager {
    return new OrderManager("OrderManager", address);
  }

  BASIS_POINTS_DIVISOR(): BigInt {
    let result = super.call(
      "BASIS_POINTS_DIVISOR",
      "BASIS_POINTS_DIVISOR():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_BASIS_POINTS_DIVISOR(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "BASIS_POINTS_DIVISOR",
      "BASIS_POINTS_DIVISOR():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  admin(): Address {
    let result = super.call("admin", "admin():(address)", []);

    return result[0].toAddress();
  }

  try_admin(): ethereum.CallResult<Address> {
    let result = super.tryCall("admin", "admin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  cancelDecreasePosition(_key: Bytes, _executionFeeReceiver: Address): boolean {
    let result = super.call(
      "cancelDecreasePosition",
      "cancelDecreasePosition(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(_key),
        ethereum.Value.fromAddress(_executionFeeReceiver),
      ],
    );

    return result[0].toBoolean();
  }

  try_cancelDecreasePosition(
    _key: Bytes,
    _executionFeeReceiver: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "cancelDecreasePosition",
      "cancelDecreasePosition(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(_key),
        ethereum.Value.fromAddress(_executionFeeReceiver),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  cancelIncreasePosition(_key: Bytes, _executionFeeReceiver: Address): boolean {
    let result = super.call(
      "cancelIncreasePosition",
      "cancelIncreasePosition(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(_key),
        ethereum.Value.fromAddress(_executionFeeReceiver),
      ],
    );

    return result[0].toBoolean();
  }

  try_cancelIncreasePosition(
    _key: Bytes,
    _executionFeeReceiver: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "cancelIncreasePosition",
      "cancelIncreasePosition(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(_key),
        ethereum.Value.fromAddress(_executionFeeReceiver),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  checkSufficientPositionExists(
    account: Address,
    collateralToken: Address,
    indexToken: Address,
    isLong: boolean,
    sizeDelta: BigInt,
  ): boolean {
    let result = super.call(
      "checkSufficientPositionExists",
      "checkSufficientPositionExists(address,address,address,bool,uint256):(bool)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(collateralToken),
        ethereum.Value.fromAddress(indexToken),
        ethereum.Value.fromBoolean(isLong),
        ethereum.Value.fromUnsignedBigInt(sizeDelta),
      ],
    );

    return result[0].toBoolean();
  }

  try_checkSufficientPositionExists(
    account: Address,
    collateralToken: Address,
    indexToken: Address,
    isLong: boolean,
    sizeDelta: BigInt,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "checkSufficientPositionExists",
      "checkSufficientPositionExists(address,address,address,bool,uint256):(bool)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(collateralToken),
        ethereum.Value.fromAddress(indexToken),
        ethereum.Value.fromBoolean(isLong),
        ethereum.Value.fromUnsignedBigInt(sizeDelta),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  decreasePositionRequestKeysStart(): BigInt {
    let result = super.call(
      "decreasePositionRequestKeysStart",
      "decreasePositionRequestKeysStart():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_decreasePositionRequestKeysStart(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "decreasePositionRequestKeysStart",
      "decreasePositionRequestKeysStart():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  decreasePositionRequests(
    param0: Bytes,
  ): OrderManager__decreasePositionRequestsResult {
    let result = super.call(
      "decreasePositionRequests",
      "decreasePositionRequests(bytes32):(address,address,address,uint256,bool,address,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromFixedBytes(param0)],
    );

    return new OrderManager__decreasePositionRequestsResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toBigInt(),
      result[4].toBoolean(),
      result[5].toAddress(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toBigInt(),
    );
  }

  try_decreasePositionRequests(
    param0: Bytes,
  ): ethereum.CallResult<OrderManager__decreasePositionRequestsResult> {
    let result = super.tryCall(
      "decreasePositionRequests",
      "decreasePositionRequests(bytes32):(address,address,address,uint256,bool,address,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromFixedBytes(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OrderManager__decreasePositionRequestsResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toBigInt(),
        value[4].toBoolean(),
        value[5].toAddress(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toBigInt(),
      ),
    );
  }

  decreasePositionsIndex(param0: Address): BigInt {
    let result = super.call(
      "decreasePositionsIndex",
      "decreasePositionsIndex(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_decreasePositionsIndex(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "decreasePositionsIndex",
      "decreasePositionsIndex(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  depositFee(): BigInt {
    let result = super.call("depositFee", "depositFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_depositFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("depositFee", "depositFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  executeDecreasePosition(
    _key: Bytes,
    _executionFeeReceiver: Address,
  ): boolean {
    let result = super.call(
      "executeDecreasePosition",
      "executeDecreasePosition(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(_key),
        ethereum.Value.fromAddress(_executionFeeReceiver),
      ],
    );

    return result[0].toBoolean();
  }

  try_executeDecreasePosition(
    _key: Bytes,
    _executionFeeReceiver: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "executeDecreasePosition",
      "executeDecreasePosition(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(_key),
        ethereum.Value.fromAddress(_executionFeeReceiver),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  executeDecreasePositions(
    _endIndex: BigInt,
    _executionFeeReceiver: Address,
  ): BigInt {
    let result = super.call(
      "executeDecreasePositions",
      "executeDecreasePositions(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_endIndex),
        ethereum.Value.fromAddress(_executionFeeReceiver),
      ],
    );

    return result[0].toBigInt();
  }

  try_executeDecreasePositions(
    _endIndex: BigInt,
    _executionFeeReceiver: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "executeDecreasePositions",
      "executeDecreasePositions(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_endIndex),
        ethereum.Value.fromAddress(_executionFeeReceiver),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  executeIncreasePosition(
    _key: Bytes,
    _executionFeeReceiver: Address,
  ): boolean {
    let result = super.call(
      "executeIncreasePosition",
      "executeIncreasePosition(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(_key),
        ethereum.Value.fromAddress(_executionFeeReceiver),
      ],
    );

    return result[0].toBoolean();
  }

  try_executeIncreasePosition(
    _key: Bytes,
    _executionFeeReceiver: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "executeIncreasePosition",
      "executeIncreasePosition(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(_key),
        ethereum.Value.fromAddress(_executionFeeReceiver),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  executeIncreasePositions(
    _endIndex: BigInt,
    _executionFeeReceiver: Address,
  ): BigInt {
    let result = super.call(
      "executeIncreasePositions",
      "executeIncreasePositions(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_endIndex),
        ethereum.Value.fromAddress(_executionFeeReceiver),
      ],
    );

    return result[0].toBigInt();
  }

  try_executeIncreasePositions(
    _endIndex: BigInt,
    _executionFeeReceiver: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "executeIncreasePositions",
      "executeIncreasePositions(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_endIndex),
        ethereum.Value.fromAddress(_executionFeeReceiver),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  feeReserves(param0: Address): BigInt {
    let result = super.call("feeReserves", "feeReserves(address):(uint256)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toBigInt();
  }

  try_feeReserves(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "feeReserves",
      "feeReserves(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAllOrders(): Array<OrderManager__getAllOrdersResultValue0Struct> {
    let result = super.call(
      "getAllOrders",
      "getAllOrders():((address,address,address,uint256,uint256,uint256,uint256,bool,bool,bool,bool,uint256)[])",
      [],
    );

    return result[0].toTupleArray<OrderManager__getAllOrdersResultValue0Struct>();
  }

  try_getAllOrders(): ethereum.CallResult<
    Array<OrderManager__getAllOrdersResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllOrders",
      "getAllOrders():((address,address,address,uint256,uint256,uint256,uint256,bool,bool,bool,bool,uint256)[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<OrderManager__getAllOrdersResultValue0Struct>(),
    );
  }

  getDecreasePositionCount(): BigInt {
    let result = super.call(
      "getDecreasePositionCount",
      "getDecreasePositionCount():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_getDecreasePositionCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getDecreasePositionCount",
      "getDecreasePositionCount():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getIncreasePositionCount(): BigInt {
    let result = super.call(
      "getIncreasePositionCount",
      "getIncreasePositionCount():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_getIncreasePositionCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getIncreasePositionCount",
      "getIncreasePositionCount():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOrderAt(index: BigInt): OrderManager__getOrderAtResultValue0Struct {
    let result = super.call(
      "getOrderAt",
      "getOrderAt(uint256):((address,address,address,uint256,uint256,uint256,uint256,bool,bool,bool,bool,uint256))",
      [ethereum.Value.fromUnsignedBigInt(index)],
    );

    return changetype<OrderManager__getOrderAtResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getOrderAt(
    index: BigInt,
  ): ethereum.CallResult<OrderManager__getOrderAtResultValue0Struct> {
    let result = super.tryCall(
      "getOrderAt",
      "getOrderAt(uint256):((address,address,address,uint256,uint256,uint256,uint256,bool,bool,bool,bool,uint256))",
      [ethereum.Value.fromUnsignedBigInt(index)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<OrderManager__getOrderAtResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  getOrderKey(_account: Address, index: BigInt): Bytes {
    let result = super.call(
      "getOrderKey",
      "getOrderKey(address,uint256):(bytes32)",
      [
        ethereum.Value.fromAddress(_account),
        ethereum.Value.fromUnsignedBigInt(index),
      ],
    );

    return result[0].toBytes();
  }

  try_getOrderKey(
    _account: Address,
    index: BigInt,
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getOrderKey",
      "getOrderKey(address,uint256):(bytes32)",
      [
        ethereum.Value.fromAddress(_account),
        ethereum.Value.fromUnsignedBigInt(index),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getOrdersCount(): BigInt {
    let result = super.call("getOrdersCount", "getOrdersCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getOrdersCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getOrdersCount",
      "getOrdersCount():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  increasePositionBufferBps(): BigInt {
    let result = super.call(
      "increasePositionBufferBps",
      "increasePositionBufferBps():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_increasePositionBufferBps(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "increasePositionBufferBps",
      "increasePositionBufferBps():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  increasePositionRequestKeys(param0: BigInt): Bytes {
    let result = super.call(
      "increasePositionRequestKeys",
      "increasePositionRequestKeys(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return result[0].toBytes();
  }

  try_increasePositionRequestKeys(param0: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "increasePositionRequestKeys",
      "increasePositionRequestKeys(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  increasePositionRequestKeysStart(): BigInt {
    let result = super.call(
      "increasePositionRequestKeysStart",
      "increasePositionRequestKeysStart():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_increasePositionRequestKeysStart(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "increasePositionRequestKeysStart",
      "increasePositionRequestKeysStart():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  increasePositionRequests(
    param0: Bytes,
  ): OrderManager__increasePositionRequestsResult {
    let result = super.call(
      "increasePositionRequests",
      "increasePositionRequests(bytes32):(address,address,address,uint256,uint256,bool,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromFixedBytes(param0)],
    );

    return new OrderManager__increasePositionRequestsResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBoolean(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toBigInt(),
    );
  }

  try_increasePositionRequests(
    param0: Bytes,
  ): ethereum.CallResult<OrderManager__increasePositionRequestsResult> {
    let result = super.tryCall(
      "increasePositionRequests",
      "increasePositionRequests(bytes32):(address,address,address,uint256,uint256,bool,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromFixedBytes(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OrderManager__increasePositionRequestsResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBoolean(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toBigInt(),
      ),
    );
  }

  increasePositionsIndex(param0: Address): BigInt {
    let result = super.call(
      "increasePositionsIndex",
      "increasePositionsIndex(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_increasePositionsIndex(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "increasePositionsIndex",
      "increasePositionsIndex(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isLiquidator(param0: Address): boolean {
    let result = super.call("isLiquidator", "isLiquidator(address):(bool)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toBoolean();
  }

  try_isLiquidator(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isLiquidator", "isLiquidator(address):(bool)", [
      ethereum.Value.fromAddress(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isOrderKeeper(param0: Address): boolean {
    let result = super.call("isOrderKeeper", "isOrderKeeper(address):(bool)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toBoolean();
  }

  try_isOrderKeeper(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isOrderKeeper",
      "isOrderKeeper(address):(bool)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPositionKeeper(param0: Address): boolean {
    let result = super.call(
      "isPositionKeeper",
      "isPositionKeeper(address):(bool)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBoolean();
  }

  try_isPositionKeeper(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isPositionKeeper",
      "isPositionKeeper(address):(bool)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  maxProfitMultiplier(): BigInt {
    let result = super.call(
      "maxProfitMultiplier",
      "maxProfitMultiplier():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_maxProfitMultiplier(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxProfitMultiplier",
      "maxProfitMultiplier():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxTimeDelay(): BigInt {
    let result = super.call("maxTimeDelay", "maxTimeDelay():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxTimeDelay(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxTimeDelay", "maxTimeDelay():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minBlockDelayKeeper(): BigInt {
    let result = super.call(
      "minBlockDelayKeeper",
      "minBlockDelayKeeper():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_minBlockDelayKeeper(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minBlockDelayKeeper",
      "minBlockDelayKeeper():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minExecutionFeeLimitOrder(): BigInt {
    let result = super.call(
      "minExecutionFeeLimitOrder",
      "minExecutionFeeLimitOrder():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_minExecutionFeeLimitOrder(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minExecutionFeeLimitOrder",
      "minExecutionFeeLimitOrder():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minExecutionFeeMarketOrder(): BigInt {
    let result = super.call(
      "minExecutionFeeMarketOrder",
      "minExecutionFeeMarketOrder():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_minExecutionFeeMarketOrder(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minExecutionFeeMarketOrder",
      "minExecutionFeeMarketOrder():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minPurchaseUSDAmountLimitOrder(): BigInt {
    let result = super.call(
      "minPurchaseUSDAmountLimitOrder",
      "minPurchaseUSDAmountLimitOrder():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_minPurchaseUSDAmountLimitOrder(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minPurchaseUSDAmountLimitOrder",
      "minPurchaseUSDAmountLimitOrder():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minPurchaseUSDAmountMarketOrder(): BigInt {
    let result = super.call(
      "minPurchaseUSDAmountMarketOrder",
      "minPurchaseUSDAmountMarketOrder():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_minPurchaseUSDAmountMarketOrder(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minPurchaseUSDAmountMarketOrder",
      "minPurchaseUSDAmountMarketOrder():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minTimeDelayPublic(): BigInt {
    let result = super.call(
      "minTimeDelayPublic",
      "minTimeDelayPublic():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_minTimeDelayPublic(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minTimeDelayPublic",
      "minTimeDelayPublic():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  orders(param0: Bytes): OrderManager__ordersResult {
    let result = super.call(
      "orders",
      "orders(bytes32):(address,address,address,uint256,uint256,uint256,uint256,bool,bool,bool,bool,uint256)",
      [ethereum.Value.fromFixedBytes(param0)],
    );

    return new OrderManager__ordersResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBoolean(),
      result[8].toBoolean(),
      result[9].toBoolean(),
      result[10].toBoolean(),
      result[11].toBigInt(),
    );
  }

  try_orders(param0: Bytes): ethereum.CallResult<OrderManager__ordersResult> {
    let result = super.tryCall(
      "orders",
      "orders(bytes32):(address,address,address,uint256,uint256,uint256,uint256,bool,bool,bool,bool,uint256)",
      [ethereum.Value.fromFixedBytes(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OrderManager__ordersResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBoolean(),
        value[8].toBoolean(),
        value[9].toBoolean(),
        value[10].toBoolean(),
        value[11].toBigInt(),
      ),
    );
  }

  ordersIndex(param0: Address): BigInt {
    let result = super.call("ordersIndex", "ordersIndex(address):(uint256)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toBigInt();
  }

  try_ordersIndex(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ordersIndex",
      "ordersIndex(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pricefeed(): Address {
    let result = super.call("pricefeed", "pricefeed():(address)", []);

    return result[0].toAddress();
  }

  try_pricefeed(): ethereum.CallResult<Address> {
    let result = super.tryCall("pricefeed", "pricefeed():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  utils(): Address {
    let result = super.call("utils", "utils():(address)", []);

    return result[0].toAddress();
  }

  try_utils(): ethereum.CallResult<Address> {
    let result = super.tryCall("utils", "utils():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  vault(): Address {
    let result = super.call("vault", "vault():(address)", []);

    return result[0].toAddress();
  }

  try_vault(): ethereum.CallResult<Address> {
    let result = super.tryCall("vault", "vault():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _vault(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _utils(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _pricefeed(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _minExecutionFeeMarketOrder(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _minExecutionFeeLimitOrder(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _depositFee(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _maxProfitMultiplier(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _minPurchaseUSDAmountLimitOrder(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get _minPurchaseUSDAmountMarketOrder(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CancelDecreasePositionCall extends ethereum.Call {
  get inputs(): CancelDecreasePositionCall__Inputs {
    return new CancelDecreasePositionCall__Inputs(this);
  }

  get outputs(): CancelDecreasePositionCall__Outputs {
    return new CancelDecreasePositionCall__Outputs(this);
  }
}

export class CancelDecreasePositionCall__Inputs {
  _call: CancelDecreasePositionCall;

  constructor(call: CancelDecreasePositionCall) {
    this._call = call;
  }

  get _key(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _executionFeeReceiver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class CancelDecreasePositionCall__Outputs {
  _call: CancelDecreasePositionCall;

  constructor(call: CancelDecreasePositionCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class CancelIncreasePositionCall extends ethereum.Call {
  get inputs(): CancelIncreasePositionCall__Inputs {
    return new CancelIncreasePositionCall__Inputs(this);
  }

  get outputs(): CancelIncreasePositionCall__Outputs {
    return new CancelIncreasePositionCall__Outputs(this);
  }
}

export class CancelIncreasePositionCall__Inputs {
  _call: CancelIncreasePositionCall;

  constructor(call: CancelIncreasePositionCall) {
    this._call = call;
  }

  get _key(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _executionFeeReceiver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class CancelIncreasePositionCall__Outputs {
  _call: CancelIncreasePositionCall;

  constructor(call: CancelIncreasePositionCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class CancelOrderCall extends ethereum.Call {
  get inputs(): CancelOrderCall__Inputs {
    return new CancelOrderCall__Inputs(this);
  }

  get outputs(): CancelOrderCall__Outputs {
    return new CancelOrderCall__Outputs(this);
  }
}

export class CancelOrderCall__Inputs {
  _call: CancelOrderCall;

  constructor(call: CancelOrderCall) {
    this._call = call;
  }

  get _orderIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class CancelOrderCall__Outputs {
  _call: CancelOrderCall;

  constructor(call: CancelOrderCall) {
    this._call = call;
  }
}

export class CreateDecreasePositionCall extends ethereum.Call {
  get inputs(): CreateDecreasePositionCall__Inputs {
    return new CreateDecreasePositionCall__Inputs(this);
  }

  get outputs(): CreateDecreasePositionCall__Outputs {
    return new CreateDecreasePositionCall__Outputs(this);
  }
}

export class CreateDecreasePositionCall__Inputs {
  _call: CreateDecreasePositionCall;

  constructor(call: CreateDecreasePositionCall) {
    this._call = call;
  }

  get _collateralToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _indexToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _sizeDelta(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _isLong(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }

  get _receiver(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _acceptablePrice(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _executionFee(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class CreateDecreasePositionCall__Outputs {
  _call: CreateDecreasePositionCall;

  constructor(call: CreateDecreasePositionCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class CreateIncreasePositionCall extends ethereum.Call {
  get inputs(): CreateIncreasePositionCall__Inputs {
    return new CreateIncreasePositionCall__Inputs(this);
  }

  get outputs(): CreateIncreasePositionCall__Outputs {
    return new CreateIncreasePositionCall__Outputs(this);
  }
}

export class CreateIncreasePositionCall__Inputs {
  _call: CreateIncreasePositionCall;

  constructor(call: CreateIncreasePositionCall) {
    this._call = call;
  }

  get _collateralToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _indexToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amountIn(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _sizeDelta(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _isLong(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }

  get _acceptablePrice(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get takeProfitPrice(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get stopLossPrice(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get _executionFee(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }
}

export class CreateIncreasePositionCall__Outputs {
  _call: CreateIncreasePositionCall;

  constructor(call: CreateIncreasePositionCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class CreateOrdersCall extends ethereum.Call {
  get inputs(): CreateOrdersCall__Inputs {
    return new CreateOrdersCall__Inputs(this);
  }

  get outputs(): CreateOrdersCall__Outputs {
    return new CreateOrdersCall__Outputs(this);
  }
}

export class CreateOrdersCall__Inputs {
  _call: CreateOrdersCall;

  constructor(call: CreateOrdersCall) {
    this._call = call;
  }

  get collateralDelta(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get indexToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get sizeDelta(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get collateralToken(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get isLong(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }

  get _executionFee(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get limitPrice(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get tpPrice(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get slPrice(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }
}

export class CreateOrdersCall__Outputs {
  _call: CreateOrdersCall;

  constructor(call: CreateOrdersCall) {
    this._call = call;
  }
}

export class ExecuteDecreasePositionCall extends ethereum.Call {
  get inputs(): ExecuteDecreasePositionCall__Inputs {
    return new ExecuteDecreasePositionCall__Inputs(this);
  }

  get outputs(): ExecuteDecreasePositionCall__Outputs {
    return new ExecuteDecreasePositionCall__Outputs(this);
  }
}

export class ExecuteDecreasePositionCall__Inputs {
  _call: ExecuteDecreasePositionCall;

  constructor(call: ExecuteDecreasePositionCall) {
    this._call = call;
  }

  get _key(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _executionFeeReceiver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ExecuteDecreasePositionCall__Outputs {
  _call: ExecuteDecreasePositionCall;

  constructor(call: ExecuteDecreasePositionCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ExecuteDecreasePositionsCall extends ethereum.Call {
  get inputs(): ExecuteDecreasePositionsCall__Inputs {
    return new ExecuteDecreasePositionsCall__Inputs(this);
  }

  get outputs(): ExecuteDecreasePositionsCall__Outputs {
    return new ExecuteDecreasePositionsCall__Outputs(this);
  }
}

export class ExecuteDecreasePositionsCall__Inputs {
  _call: ExecuteDecreasePositionsCall;

  constructor(call: ExecuteDecreasePositionsCall) {
    this._call = call;
  }

  get _endIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _executionFeeReceiver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ExecuteDecreasePositionsCall__Outputs {
  _call: ExecuteDecreasePositionsCall;

  constructor(call: ExecuteDecreasePositionsCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ExecuteIncreasePositionCall extends ethereum.Call {
  get inputs(): ExecuteIncreasePositionCall__Inputs {
    return new ExecuteIncreasePositionCall__Inputs(this);
  }

  get outputs(): ExecuteIncreasePositionCall__Outputs {
    return new ExecuteIncreasePositionCall__Outputs(this);
  }
}

export class ExecuteIncreasePositionCall__Inputs {
  _call: ExecuteIncreasePositionCall;

  constructor(call: ExecuteIncreasePositionCall) {
    this._call = call;
  }

  get _key(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _executionFeeReceiver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ExecuteIncreasePositionCall__Outputs {
  _call: ExecuteIncreasePositionCall;

  constructor(call: ExecuteIncreasePositionCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ExecuteIncreasePositionsCall extends ethereum.Call {
  get inputs(): ExecuteIncreasePositionsCall__Inputs {
    return new ExecuteIncreasePositionsCall__Inputs(this);
  }

  get outputs(): ExecuteIncreasePositionsCall__Outputs {
    return new ExecuteIncreasePositionsCall__Outputs(this);
  }
}

export class ExecuteIncreasePositionsCall__Inputs {
  _call: ExecuteIncreasePositionsCall;

  constructor(call: ExecuteIncreasePositionsCall) {
    this._call = call;
  }

  get _endIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _executionFeeReceiver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ExecuteIncreasePositionsCall__Outputs {
  _call: ExecuteIncreasePositionsCall;

  constructor(call: ExecuteIncreasePositionsCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ExecuteMultipleOrdersCall extends ethereum.Call {
  get inputs(): ExecuteMultipleOrdersCall__Inputs {
    return new ExecuteMultipleOrdersCall__Inputs(this);
  }

  get outputs(): ExecuteMultipleOrdersCall__Outputs {
    return new ExecuteMultipleOrdersCall__Outputs(this);
  }
}

export class ExecuteMultipleOrdersCall__Inputs {
  _call: ExecuteMultipleOrdersCall;

  constructor(call: ExecuteMultipleOrdersCall) {
    this._call = call;
  }

  get accountAddresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get orderIndices(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _feeReceiver(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ExecuteMultipleOrdersCall__Outputs {
  _call: ExecuteMultipleOrdersCall;

  constructor(call: ExecuteMultipleOrdersCall) {
    this._call = call;
  }
}

export class ExecuteOrderCall extends ethereum.Call {
  get inputs(): ExecuteOrderCall__Inputs {
    return new ExecuteOrderCall__Inputs(this);
  }

  get outputs(): ExecuteOrderCall__Outputs {
    return new ExecuteOrderCall__Outputs(this);
  }
}

export class ExecuteOrderCall__Inputs {
  _call: ExecuteOrderCall;

  constructor(call: ExecuteOrderCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _orderIndex(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _feeReceiver(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ExecuteOrderCall__Outputs {
  _call: ExecuteOrderCall;

  constructor(call: ExecuteOrderCall) {
    this._call = call;
  }
}

export class LiquidateMultiplePositionsCall extends ethereum.Call {
  get inputs(): LiquidateMultiplePositionsCall__Inputs {
    return new LiquidateMultiplePositionsCall__Inputs(this);
  }

  get outputs(): LiquidateMultiplePositionsCall__Outputs {
    return new LiquidateMultiplePositionsCall__Outputs(this);
  }
}

export class LiquidateMultiplePositionsCall__Inputs {
  _call: LiquidateMultiplePositionsCall;

  constructor(call: LiquidateMultiplePositionsCall) {
    this._call = call;
  }

  get keys(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get _feeReceiver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class LiquidateMultiplePositionsCall__Outputs {
  _call: LiquidateMultiplePositionsCall;

  constructor(call: LiquidateMultiplePositionsCall) {
    this._call = call;
  }
}

export class SetAdminCall extends ethereum.Call {
  get inputs(): SetAdminCall__Inputs {
    return new SetAdminCall__Inputs(this);
  }

  get outputs(): SetAdminCall__Outputs {
    return new SetAdminCall__Outputs(this);
  }
}

export class SetAdminCall__Inputs {
  _call: SetAdminCall;

  constructor(call: SetAdminCall) {
    this._call = call;
  }

  get _admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAdminCall__Outputs {
  _call: SetAdminCall;

  constructor(call: SetAdminCall) {
    this._call = call;
  }
}

export class SetDelayValuesCall extends ethereum.Call {
  get inputs(): SetDelayValuesCall__Inputs {
    return new SetDelayValuesCall__Inputs(this);
  }

  get outputs(): SetDelayValuesCall__Outputs {
    return new SetDelayValuesCall__Outputs(this);
  }
}

export class SetDelayValuesCall__Inputs {
  _call: SetDelayValuesCall;

  constructor(call: SetDelayValuesCall) {
    this._call = call;
  }

  get _minBlockDelayKeeper(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _minTimeDelayPublic(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _maxTimeDelay(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetDelayValuesCall__Outputs {
  _call: SetDelayValuesCall;

  constructor(call: SetDelayValuesCall) {
    this._call = call;
  }
}

export class SetDepositFeeCall extends ethereum.Call {
  get inputs(): SetDepositFeeCall__Inputs {
    return new SetDepositFeeCall__Inputs(this);
  }

  get outputs(): SetDepositFeeCall__Outputs {
    return new SetDepositFeeCall__Outputs(this);
  }
}

export class SetDepositFeeCall__Inputs {
  _call: SetDepositFeeCall;

  constructor(call: SetDepositFeeCall) {
    this._call = call;
  }

  get _fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDepositFeeCall__Outputs {
  _call: SetDepositFeeCall;

  constructor(call: SetDepositFeeCall) {
    this._call = call;
  }
}

export class SetLiquidatorCall extends ethereum.Call {
  get inputs(): SetLiquidatorCall__Inputs {
    return new SetLiquidatorCall__Inputs(this);
  }

  get outputs(): SetLiquidatorCall__Outputs {
    return new SetLiquidatorCall__Outputs(this);
  }
}

export class SetLiquidatorCall__Inputs {
  _call: SetLiquidatorCall;

  constructor(call: SetLiquidatorCall) {
    this._call = call;
  }

  get _account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _isActive(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetLiquidatorCall__Outputs {
  _call: SetLiquidatorCall;

  constructor(call: SetLiquidatorCall) {
    this._call = call;
  }
}

export class SetMaxTPMultiplierCall extends ethereum.Call {
  get inputs(): SetMaxTPMultiplierCall__Inputs {
    return new SetMaxTPMultiplierCall__Inputs(this);
  }

  get outputs(): SetMaxTPMultiplierCall__Outputs {
    return new SetMaxTPMultiplierCall__Outputs(this);
  }
}

export class SetMaxTPMultiplierCall__Inputs {
  _call: SetMaxTPMultiplierCall;

  constructor(call: SetMaxTPMultiplierCall) {
    this._call = call;
  }

  get _maxProfitMultiplier(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaxTPMultiplierCall__Outputs {
  _call: SetMaxTPMultiplierCall;

  constructor(call: SetMaxTPMultiplierCall) {
    this._call = call;
  }
}

export class SetMinExecutionFeeLimitOrderCall extends ethereum.Call {
  get inputs(): SetMinExecutionFeeLimitOrderCall__Inputs {
    return new SetMinExecutionFeeLimitOrderCall__Inputs(this);
  }

  get outputs(): SetMinExecutionFeeLimitOrderCall__Outputs {
    return new SetMinExecutionFeeLimitOrderCall__Outputs(this);
  }
}

export class SetMinExecutionFeeLimitOrderCall__Inputs {
  _call: SetMinExecutionFeeLimitOrderCall;

  constructor(call: SetMinExecutionFeeLimitOrderCall) {
    this._call = call;
  }

  get _minExecutionFeeLimitOrder(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinExecutionFeeLimitOrderCall__Outputs {
  _call: SetMinExecutionFeeLimitOrderCall;

  constructor(call: SetMinExecutionFeeLimitOrderCall) {
    this._call = call;
  }
}

export class SetMinExecutionFeeMarketOrderCall extends ethereum.Call {
  get inputs(): SetMinExecutionFeeMarketOrderCall__Inputs {
    return new SetMinExecutionFeeMarketOrderCall__Inputs(this);
  }

  get outputs(): SetMinExecutionFeeMarketOrderCall__Outputs {
    return new SetMinExecutionFeeMarketOrderCall__Outputs(this);
  }
}

export class SetMinExecutionFeeMarketOrderCall__Inputs {
  _call: SetMinExecutionFeeMarketOrderCall;

  constructor(call: SetMinExecutionFeeMarketOrderCall) {
    this._call = call;
  }

  get _minExecutionFeeMarketOrder(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinExecutionFeeMarketOrderCall__Outputs {
  _call: SetMinExecutionFeeMarketOrderCall;

  constructor(call: SetMinExecutionFeeMarketOrderCall) {
    this._call = call;
  }
}

export class SetMinPurchaseAmountCall extends ethereum.Call {
  get inputs(): SetMinPurchaseAmountCall__Inputs {
    return new SetMinPurchaseAmountCall__Inputs(this);
  }

  get outputs(): SetMinPurchaseAmountCall__Outputs {
    return new SetMinPurchaseAmountCall__Outputs(this);
  }
}

export class SetMinPurchaseAmountCall__Inputs {
  _call: SetMinPurchaseAmountCall;

  constructor(call: SetMinPurchaseAmountCall) {
    this._call = call;
  }

  get _marketOrder(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _limitOrder(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetMinPurchaseAmountCall__Outputs {
  _call: SetMinPurchaseAmountCall;

  constructor(call: SetMinPurchaseAmountCall) {
    this._call = call;
  }
}

export class SetOrderKeeperCall extends ethereum.Call {
  get inputs(): SetOrderKeeperCall__Inputs {
    return new SetOrderKeeperCall__Inputs(this);
  }

  get outputs(): SetOrderKeeperCall__Outputs {
    return new SetOrderKeeperCall__Outputs(this);
  }
}

export class SetOrderKeeperCall__Inputs {
  _call: SetOrderKeeperCall;

  constructor(call: SetOrderKeeperCall) {
    this._call = call;
  }

  get _account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _isActive(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetOrderKeeperCall__Outputs {
  _call: SetOrderKeeperCall;

  constructor(call: SetOrderKeeperCall) {
    this._call = call;
  }
}

export class SetPositionKeeperCall extends ethereum.Call {
  get inputs(): SetPositionKeeperCall__Inputs {
    return new SetPositionKeeperCall__Inputs(this);
  }

  get outputs(): SetPositionKeeperCall__Outputs {
    return new SetPositionKeeperCall__Outputs(this);
  }
}

export class SetPositionKeeperCall__Inputs {
  _call: SetPositionKeeperCall;

  constructor(call: SetPositionKeeperCall) {
    this._call = call;
  }

  get _account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _isActive(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetPositionKeeperCall__Outputs {
  _call: SetPositionKeeperCall;

  constructor(call: SetPositionKeeperCall) {
    this._call = call;
  }
}

export class SetPriceFeedCall extends ethereum.Call {
  get inputs(): SetPriceFeedCall__Inputs {
    return new SetPriceFeedCall__Inputs(this);
  }

  get outputs(): SetPriceFeedCall__Outputs {
    return new SetPriceFeedCall__Outputs(this);
  }
}

export class SetPriceFeedCall__Inputs {
  _call: SetPriceFeedCall;

  constructor(call: SetPriceFeedCall) {
    this._call = call;
  }

  get _priceFeed(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPriceFeedCall__Outputs {
  _call: SetPriceFeedCall;

  constructor(call: SetPriceFeedCall) {
    this._call = call;
  }
}

export class SetUtilsCall extends ethereum.Call {
  get inputs(): SetUtilsCall__Inputs {
    return new SetUtilsCall__Inputs(this);
  }

  get outputs(): SetUtilsCall__Outputs {
    return new SetUtilsCall__Outputs(this);
  }
}

export class SetUtilsCall__Inputs {
  _call: SetUtilsCall;

  constructor(call: SetUtilsCall) {
    this._call = call;
  }

  get _utils(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetUtilsCall__Outputs {
  _call: SetUtilsCall;

  constructor(call: SetUtilsCall) {
    this._call = call;
  }
}

export class SetVaultCall extends ethereum.Call {
  get inputs(): SetVaultCall__Inputs {
    return new SetVaultCall__Inputs(this);
  }

  get outputs(): SetVaultCall__Outputs {
    return new SetVaultCall__Outputs(this);
  }
}

export class SetVaultCall__Inputs {
  _call: SetVaultCall;

  constructor(call: SetVaultCall) {
    this._call = call;
  }

  get _vault(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetVaultCall__Outputs {
  _call: SetVaultCall;

  constructor(call: SetVaultCall) {
    this._call = call;
  }
}

export class UpdateOrderCall extends ethereum.Call {
  get inputs(): UpdateOrderCall__Inputs {
    return new UpdateOrderCall__Inputs(this);
  }

  get outputs(): UpdateOrderCall__Outputs {
    return new UpdateOrderCall__Outputs(this);
  }
}

export class UpdateOrderCall__Inputs {
  _call: UpdateOrderCall;

  constructor(call: UpdateOrderCall) {
    this._call = call;
  }

  get _orderIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _sizeDelta(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _newCollateralAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _triggerPrice(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class UpdateOrderCall__Outputs {
  _call: UpdateOrderCall;

  constructor(call: UpdateOrderCall) {
    this._call = call;
  }
}

export class WithdrawAdditionalFeesCall extends ethereum.Call {
  get inputs(): WithdrawAdditionalFeesCall__Inputs {
    return new WithdrawAdditionalFeesCall__Inputs(this);
  }

  get outputs(): WithdrawAdditionalFeesCall__Outputs {
    return new WithdrawAdditionalFeesCall__Outputs(this);
  }
}

export class WithdrawAdditionalFeesCall__Inputs {
  _call: WithdrawAdditionalFeesCall;

  constructor(call: WithdrawAdditionalFeesCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawAdditionalFeesCall__Outputs {
  _call: WithdrawAdditionalFeesCall;

  constructor(call: WithdrawAdditionalFeesCall) {
    this._call = call;
  }
}

export class WithdrawFeesCall extends ethereum.Call {
  get inputs(): WithdrawFeesCall__Inputs {
    return new WithdrawFeesCall__Inputs(this);
  }

  get outputs(): WithdrawFeesCall__Outputs {
    return new WithdrawFeesCall__Outputs(this);
  }
}

export class WithdrawFeesCall__Inputs {
  _call: WithdrawFeesCall;

  constructor(call: WithdrawFeesCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _receiver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class WithdrawFeesCall__Outputs {
  _call: WithdrawFeesCall;

  constructor(call: WithdrawFeesCall) {
    this._call = call;
  }
}
